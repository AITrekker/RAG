services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: rag_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - rag_network

  # Backend API Service
  backend:
    container_name: rag_backend
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./src/backend:/app/src/backend
      - ./documents:/app/documents
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - QDRANT_URL=http://qdrant:6333
      - RELOAD_ON_CHANGE=True
    networks:
      - rag_network
    depends_on:
      - qdrant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    command: sh -c "python scripts/startup.py && uvicorn src.backend.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir src"

  # Frontend Service
  frontend:
    container_name: rag_frontend
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
    networks:
      - rag_network
    depends_on:
      backend:
        condition: service_healthy

networks:
  rag_network:
    driver: bridge

volumes:
  qdrant_storage:
    driver: local 