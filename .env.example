# =============================================================================
# Enterprise RAG Platform - Environment Configuration
# =============================================================================
# Copy this file to .env and adjust values for your setup
# This configuration reflects the PostgreSQL + pgvector unified architecture

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application Environment
NODE_ENV=development
DEBUG=true
LOG_LEVEL=DEBUG

# Application URLs
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:8000
API_BASE_URL=http://localhost:8000/api/v1

# CORS Settings
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173

# Frontend Configuration
VITE_APP_TITLE=Enterprise RAG Platform
VITE_API_BASE_URL=http://localhost:8000/api/v1

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL + pgvector)
# =============================================================================

# Primary Database - PostgreSQL with pgvector for unified storage
DATABASE_URL=postgresql://rag_user:rag_password@postgres:5432/rag_db_development

# Database Connection Settings
DB_ECHO=false
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# Database Credentials (used by scripts and Docker)
POSTGRES_USER=rag_user
POSTGRES_PASSWORD=rag_password

# pgvector Configuration (unified storage - no separate vector DB needed)
# Configuration is handled automatically by the database schema

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================

# GPU Settings (set to your GPU if available, or remove for CPU-only)
CUDA_VISIBLE_DEVICES=0
CUDA_DEVICE_ORDER=PCI_BUS_ID

# HuggingFace Model Cache Settings (Docker paths)
TRANSFORMERS_CACHE=/home/app/.cache/transformers
TRANSFORMERS_OFFLINE=0
HF_DATASETS_OFFLINE=0
HF_HOME=/home/app/.cache/huggingface
HUGGINGFACE_HUB_CACHE=/home/app/.cache/huggingface/hub
TOKENIZERS_PARALLELISM=false

# Model Configuration (using short names, not full paths)
EMBEDDING_MODEL=all-MiniLM-L6-v2
LLM_MODEL=gpt2-large

# HuggingFace Configuration (optional token for private models)
HF_TOKEN=

# Model Performance Settings
EMBEDDING_MODEL_DIMENSIONS=384
EMBEDDING_DEVICE=cpu
EMBEDDING_BATCH_SIZE=32
MAX_SEQUENCE_LENGTH=512
BATCH_SIZE=8
USE_HALF_PRECISION=true

# Quantization Settings (requires bitsandbytes package)
RAG_ENABLE_QUANTIZATION=false
LLM_ENABLE_QUANTIZATION=false

# RAG Generation Parameters
RAG_TEMPERATURE=0.2
RAG_MAX_NEW_TOKENS=250
RAG_MAX_SOURCES=7
RAG_TOP_P=0.8
RAG_TOP_K=30
RAG_REPETITION_PENALTY=1.4
RAG_EARLY_STOPPING=true
RAG_DO_SAMPLE=true

# =============================================================================
# FILE PROCESSING AND STORAGE
# =============================================================================

# File Upload and Processing
UPLOAD_DIRECTORY=./data/uploads
MAX_FILE_SIZE=100MB
ALLOWED_FILE_TYPES=pdf,docx,txt,md,html,htm,csv

# Document Processing
CHUNK_SIZE=512
CHUNK_OVERLAP=50
MAX_CHUNKS_PER_DOCUMENT=1000

# Document Processing Paths
DOCUMENTS_PATH=./data/uploads

# =============================================================================
# MULTI-TENANT CONFIGURATION
# =============================================================================

# Tenant Settings
DEFAULT_TENANT_ID=default
TENANT_ISOLATION_LEVEL=strict

# Environment Configuration
RAG_ENVIRONMENT=development

# Environment-specific Database URLs (for scripts)
DATABASE_URL_PRODUCTION=postgresql://rag_user:rag_password@postgres:5432/rag_db_production
DATABASE_URL_STAGING=postgresql://rag_user:rag_password@postgres:5432/rag_db_staging
DATABASE_URL_TEST=postgresql://rag_user:rag_password@postgres:5432/rag_db_test
DATABASE_URL_DEVELOPMENT=postgresql://rag_user:rag_password@postgres:5432/rag_db_development

# =============================================================================
# SYNCHRONIZATION SETTINGS
# =============================================================================

# Document Sync Configuration
SYNC_ENABLED=true
SYNC_INTERVAL_HOURS=24
SYNC_BATCH_SIZE=100

# =============================================================================
# SECURITY AND AUTHENTICATION
# =============================================================================

# CORS Settings
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000

# Admin Credentials (auto-generated by setup scripts)
# ADMIN_TENANT_ID=<auto-generated-uuid>
# ADMIN_API_KEY=<auto-generated-key>

# =============================================================================
# PERFORMANCE AND MONITORING
# =============================================================================

# Performance Settings
RESPONSE_TIMEOUT_SECONDS=300
MAX_CONCURRENT_REQUESTS=10

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Logging Configuration
LOG_DIRECTORY=./logs
LOG_LEVEL=DEBUG

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development Tools
RELOAD=true
HOT_RELOAD_FRONTEND=true
CHOKIDAR_USEPOLLING=true

# Debugging
VERBOSE_ERRORS=true

# =============================================================================
# DATABASE SEEDING CONFIGURATION
# =============================================================================

# Database Seeding
SEED_ON_STARTUP=true

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================

# OpenAI Integration (not required - using HuggingFace models)
# OPENAI_API_KEY=your_openai_key_if_desired

# Redis Cache (not used - PostgreSQL handles all caching)
# REDIS_URL=redis://localhost:6379/0
# CACHE_TTL_SECONDS=3600

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================

# PRODUCTION CHECKLIST:
# 1. Change POSTGRES_PASSWORD to a secure value
# 2. Set DEBUG=false and LOG_LEVEL=WARNING
# 3. Update DATABASE_URL to use production database
# 4. Set appropriate CUDA_VISIBLE_DEVICES for your GPU
# 5. Configure CORS_ORIGINS for your production domain
# 6. Set HF_TOKEN if using private HuggingFace models
# 7. Adjust model settings based on your hardware capacity

# ARCHITECTURE NOTES:
# - PostgreSQL + pgvector provides unified storage (no separate vector DB needed)
# - HuggingFace models downloaded once and cached in Docker volumes
# - Hybrid LlamaIndex integration for advanced document processing
# - All services communicate through Docker network
# - Health checks optimized for production (60-second intervals)