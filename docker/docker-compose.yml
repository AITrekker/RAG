version: '3.8'

services:
  # Main application container
  enterprise-rag-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: enterprise-rag-pipeline
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///app/data/db/enterprise_rag.db
      - VECTOR_STORE_PATH=/app/data/vector_store
      - MASTER_FOLDER_PATH=/app/data/master
      - SYNC_FOLDER_PATH=/app/data/sync
      - LOG_LEVEL=INFO
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - ../src:/app/src:ro
      - enterprise_rag_data:/app/data
      - enterprise_rag_logs:/app/data/logs
      - type: bind
        source: ${MASTER_FOLDER_PATH:-./data/master}
        target: /app/data/master
      - type: bind
        source: ${SYNC_FOLDER_PATH:-./data/sync}
        target: /app/data/sync
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - vector-store
    networks:
      - enterprise-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Database container (PostgreSQL for production)
  database:
    image: postgres:15
    container_name: enterprise-rag-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=enterprise_rag
      - POSTGRES_USER=enterprise_rag_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-enterprise_rag_password}
    volumes:
      - enterprise_rag_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - enterprise-rag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U enterprise_rag_user -d enterprise_rag"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Vector store container (ChromaDB)
  vector-store:
    image: chromadb/chroma:latest
    container_name: enterprise-rag-vector-store
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    volumes:
      - enterprise_rag_vector_data:/chroma/chroma
    networks:
      - enterprise-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vector Store Service (ChromaDB)
  chromadb:
    image: chromadb/chroma:latest
    container_name: enterprise-rag-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_DB_IMPL=duckdb+parquet
      - CHROMA_PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=false
    networks:
      - enterprise-rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  enterprise_rag_data:
    driver: local
  enterprise_rag_logs:
    driver: local
  enterprise_rag_db_data:
    driver: local
  enterprise_rag_vector_data:
    driver: local
  chromadb_data:
    driver: local

networks:
  enterprise-rag-network:
    driver: bridge 